name: Blue-Green Deployment on GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_ZONE }}

      - name: Set up kubectl context
        run: |
          kubectl config set-context --current --namespace=green

      - name: Deploy to Green Environment
        run: |
          kubectl apply -f deployment-green.yaml
          kubectl apply -f service-green.yaml

      - name: Wait for Green Deployment to be ready
        run: |
          kubectl rollout status deployment/my-app --namespace=green

      - name: Run health check
        run: |
          GREEN_IP=$(kubectl get svc my-app -n green -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          curl --fail http://$GREEN_IP/health || exit 1

      - name: Switch Traffic to Green Environment
        run: |
          kubectl patch service my-app -n blue -p '{"spec":{"selector":{"app":"no-app"}}}'
          kubectl patch service my-app -n green -p '{"spec":{"selector":{"app":"my-app"}}}'

      - name: Post-deployment Cleanup (Optional)
        run: |
          kubectl delete deployment my-app --namespace=blue
